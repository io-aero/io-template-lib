name: Test - Development

on:
  pull_request:
    branches: [ 'main' ]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  test_development:
    # --------------------------------------------------------------------------
    # Install the development environment and run all tests based on pytest.
    # --------------------------------------------------------------------------
    name: OS ${{ matrix.os }} - Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -el {0}
    strategy:
      max-parallel: 1
      matrix:
        os: ["ubuntu-22.04"]
        python-version: ["3.10"]
    steps:
      - name: Show the repository variables
        run: |
          echo CONDA=${{ vars.CONDA }}
          echo COVERALLS=${{ vars.COVERALLS }}
      - name: Checking out the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1  # no history, just HEAD
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Set up Miniconda
        if: ${{ vars.CONDA }} == "true"
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          miniconda-version: "latest"
          python-version: ${{ matrix.python-version }}
      - name: Install conda dependencies - Conda 1/2
        if: ${{ vars.CONDA }} == "true"
        run: conda init bash
      - name: Install conda dependencies - Conda 2/2
        if: ${{ vars.CONDA }} == "true"
        run: make conda-action
      - name: Install dev dependencies - pipenv
        run: make pipenv-dev
      - name: Compile the Python code
        run: make compileall
      - name: Run pytest for writing better program
        run: |
            echo "::echo::on"
            echo "================================================================================"
            echo "Current version of Python3: $(python --version)"
            echo "Current version of pip3: $(pip --version || true)"
            echo "Current version of Ubuntu: $(lsb_release -a)"
            echo "================================================================================"
            make pytest
